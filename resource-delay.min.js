// resource-delay v0.1 — load heavy CSS/JS/fonts after fullscreen preloader (~1.7 kB gz)
// Author: Temirkhan Rustemov (DreamerView) - https://github.com/DreamerView

(function (g,f){typeof module==='object'&&module.exports?module.exports=f():g.ResourceDelay=f();})(this,function(){'use strict';
  const loaded=new Set();
  const append=(tag,attr)=>new Promise((res,rej)=>{const el=document.createElement(tag);for(const k in attr)el.setAttribute(k,attr[k]);el.onload=()=>res(el);el.onerror=rej;document.head.appendChild(el);});
  const loadCSS = href=> loaded.has(href)?Promise.resolve(): (loaded.add(href),append('link',{rel:'stylesheet',href}));
  const loadJS  = src => loaded.has(src) ?Promise.resolve(): (loaded.add(src), append('script',{src,async:''}));
  const loadFont=(name,url)=>{
    if(document.fonts&&window.FontFace){
      const ff=new FontFace(name,`url(${url})`);return ff.load().then(f=>document.fonts.add(f));
    }
    return loadCSS(url);
  };
  const show=(html)=>{const d=document.createElement('div');Object.assign(d.style,{position:'fixed',inset:0,display:'flex',alignItems:'center',justifyContent:'center',background:'#fff',zIndex:9999});d.id='res-delay-preloader';d.innerHTML=html||'<span style="font:16px sans-serif">Loading…</span>';document.body.appendChild(d);return d;};
  const hide=el=>el&&el.remove();
  function delay(cfg={}){
    const pre=show(cfg.html);
    const p=[...(cfg.css||[]).map(loadCSS),...(cfg.js||[]).map(loadJS),...(cfg.fonts||[]).map(f=>loadFont(f[0],f[1]))];
    return Promise.all(p).finally(()=>hide(pre));
  }
  return { loadCSS, loadJS, loadFont, delay };
});
